'use client'

import { useEffect, useId, useRef, useState } from 'react'

// This component contains the SVG and all its animation logic.
function SvgMaskAnimation({ animationKey }) {
  const maskContainerRef = useRef(null)
  const uniqueMaskId = useId() // Generates a unique ID for the mask

  // This runs once after the component mounts to measure the SVG path
  useEffect(() => {
    const paths = maskContainerRef.current.querySelectorAll('path')

    // This will hold the total duration so we know when to start the next animation
    let totalDuration = 0

    paths.forEach((path, index) => {
      // 1. Measure each path
      const pathLength = path.getTotalLength()
      path.style.setProperty('--mask-path-length', `${pathLength}px`)

      // 2. Estimate the duration for this path's animation
      // A simple rule: longer paths get more time. Adjust the 0.015 value to speed up/slow down.
      const duration = pathLength * 0.015 // e.g., 100px * 0.015 = 1.5s
      path.style.setProperty('--animation-duration', `${duration}s`)

      // 3. Set the animation delay for this path
      // The first path has a 0s delay. Each subsequent path is delayed by the
      // total duration of all paths before it.
      path.style.setProperty('--animation-delay', `${totalDuration}s`)
      console.log(`Path #${index}: Length = ${pathLength.toFixed(2)}, Duration = ${duration.toFixed(2)}s, Delay = ${totalDuration.toFixed(2)}s`)

      // 4. Add this path's duration to the total for the next loop
      totalDuration += duration
    })
  }, [])

  return (
    <svg
      key={animationKey}
      className="svgMaskReveal"
      // Increased SVG canvas size for the bigger text
      width="800"
      height="300"
      viewBox="0 100 200 100"
      xmlns="http://www.w3.org/2000/svg"
    >
      <defs>
        <mask id={uniqueMaskId}>
          <g ref={maskContainerRef}>
            <path d="m 27.139098,120.59432 c -0.788221,1.08902 -1.900105,1.9013 -2.405082,3.21965 -0.637021,1.66308 -1.688149,3.13243 -2.841108,4.46887 -0.799798,0.92708 -0.69161,2.17894 -0.995579,3.30879 -0.383702,1.42623 -1.241607,2.60831 -1.814758,3.98201 -0.606472,1.45356 -0.417218,3.08848 -0.477138,4.6303 -0.04321,1.11197 0.669723,1.90018 1.550408,2.57813 0.8587,0.66102 2.04237,0.93562 3.000963,0.67217 1.024901,-0.28167 2.030373,-0.18438 3.109385,-0.51507 1.017305,-0.31178 1.808945,-0.92697 2.700095,-1.38594" />
            <path d="m 34.286621,134.19074 c 0.923729,1.19681 2.787524,1.99272 4.042859,1.23412 0.604899,-0.36554 1.469885,-0.51422 1.704709,-1.29324 0.250719,-0.83175 0.888919,-1.79446 0.486364,-2.57418 -0.33279,-0.64459 -1.132328,-0.56067 -1.734047,-0.64308 -0.788871,-0.10805 -1.516858,0.28104 -2.063049,0.92295 -0.52134,0.6127 -1.210625,1.05501 -1.760402,1.64652 -0.736569,0.79249 -1.725937,1.70072 -1.645546,2.8036 0.05196,0.71285 0.104921,1.41006 -0.08914,2.12339 -0.192447,0.70741 -0.155041,1.61252 0.522181,2.03487 0.542932,0.3386 0.765056,1.16892 1.395923,1.26876 0.710207,0.11239 1.554326,0.23998 2.149631,-0.16122 0.646798,-0.4359 1.129247,-1.05112 1.764349,-1.53581 0.278921,-0.21287 0.550058,-0.45527 0.707728,-0.77504" />
            <path d="m 48.957856,131.39622 c -0.792667,0.26479 -1.341193,0.99484 -1.724502,1.68833 -0.391471,0.70826 -1.122165,1.22402 -1.341257,1.99833 -0.182793,0.64602 -0.564921,1.18688 -0.941749,1.74206 -0.433782,0.63909 -0.399179,1.46485 -0.577497,2.19342 -0.164518,0.67218 0.03044,1.35918 0.720232,1.70259 0.637668,0.31745 1.214384,0.67445 2.003005,0.38971 1.248405,-0.45076 1.961698,-1.7585 3.205288,-2.29821 0.736092,-0.31946 0.810369,-1.2635 1.249299,-1.86717 0.420933,-0.57893 0.469502,-1.27744 0.375212,-1.98743 -0.163754,-1.23305 -0.893756,-2.44321 -1.956864,-2.9628 -0.331868,-0.1622 -0.72669,-1.0963 -0.957429,-0.11516 -0.210936,0.89694 0.59969,1.78046 1.380444,1.76187 0.689412,-0.0164 1.570724,0.23457 2.058967,-0.25713 0.454211,-0.45743 0.983413,-0.85605 1.604517,-1.05101 0,0 0.115188,-0.0775 0.115188,-0.0775" />
            <path d="m 59.276088,130.91256 c 0.05411,0.38779 -0.195532,-0.36352 0,0 0.362002,0.673 0.845017,1.61349 0.336541,2.31256 -0.749973,1.0311 -0.994556,2.31278 -1.680745,3.38048 -0.685754,1.06703 -1.417103,4.75851 -1.450317,3.49663 -0.02055,-0.78059 0.519939,-1.48574 1.090161,-1.97949 1.364355,-1.1814 2.834746,-2.34478 4.538184,-2.90242 0.870051,-0.28482 1.719792,-0.61722 2.5444,-1.03448 0.726481,-0.36761 1.516734,0.0917 1.677098,0.91416 0.303475,1.55635 -0.754651,3.24831 -0.122762,4.67978 0.209301,0.47415 0.422384,1.32975 1.074817,1.28978" />
            <path d="m 78.783991,130.37515 c -1.168024,-0.24087 -1.673282,0.98814 -2.628509,1.37431 -1.558654,0.63011 -2.581163,2.05321 -3.576533,3.33472 -0.672418,0.86571 -1.023998,1.9011 -1.118349,2.9802 -0.109207,1.24899 1.511847,1.02292 2.338009,0.7901 0.983429,-0.27715 1.862586,-0.76352 2.704526,-1.35372 0.796872,-0.55859 1.280618,-1.29404 1.838657,-2.15411 0.544297,-0.83887 1.043934,-1.54632 1.24587,-2.64851 0.143469,-0.78307 -1.121524,-2.65889 -0.726022,-2.24807 0.764307,0.7939 1.363408,1.7543 1.44368,2.92061 0.09115,1.32437 -1.01404,1.97293 -2.023978,2.71407 -0.811073,0.59521 -0.514794,1.74242 -0.9379,2.5916 -0.515258,1.03412 0.0047,2.19286 -0.440955,3.24679 -0.415982,0.98372 -0.47423,2.07409 -0.867117,3.08059 -0.418297,1.07159 -1.277926,1.88912 -1.901492,2.83639 -0.722071,1.09691 -1.946469,0.79624 -2.815327,-0.0348 -0.768329,-0.73489 -1.32039,-1.5714 -2.121025,-2.23393 0,0 -0.07305,-0.10397 -0.07305,-0.10397 0,0 -0.121307,-0.15233 -0.121307,-0.15233" />
            <path d="m 98.990527,119.30454 c 0.648641,1.51442 -0.929175,2.79379 -1.048844,4.19948 -0.197221,2.31667 -1.720246,4.17298 -2.398654,6.34611 -0.494432,1.58381 -1.343877,3.04787 -1.711618,4.66306 -0.508535,2.23359 -0.917406,4.6401 -2.397343,6.42306 -0.693614,0.83563 -0.928512,3.75677 -0.946381,3.32524 -0.05896,-1.42397 0.711632,-2.72933 1.248694,-4.01007 0.761398,-1.81573 1.745617,-3.50346 2.455481,-5.34304 0.468579,-1.21431 0.902269,-2.51932 2.004144,-3.35094 1.141322,-0.8614 2.299735,-1.73358 3.541604,-2.4347 1.47445,-0.83244 2.70274,-2.11427 4.11921,-3.07323 1.32657,-0.8981 3.07457,-1.07732 4.29737,-2.11418 0.43888,-0.37215 1.4217,-1.41727 0.32203,-0.46896 -1.46492,1.2633 -3.37343,1.78038 -4.97146,2.82448 -1.48685,0.97146 -2.48327,2.64881 -4.081348,3.57423 -1.125981,0.65204 -2.638926,0.76295 -3.720527,1.51566 -0.682812,0.47519 -2.840197,-0.21545 -1.428094,0.70555 1.163025,0.75855 2.162833,1.72637 3.080863,2.75677 1.202702,1.34992 2.272022,2.77279 3.354576,4.23809 1.17989,1.59706 2.27864,3.30382 3.73333,4.64639 0.42626,0.3934 1.20139,0.2896 1.53327,0.78143" />
            <path d="m 113.98421,130.9663 c -2.1559,0.57805 -3.37072,2.61132 -4.75226,4.22733 -0.4681,0.54754 -0.46194,1.34467 -0.89052,1.89912 -0.45642,0.59046 -0.58374,1.31773 -0.80709,2.02323 -0.26665,0.84226 -0.12477,1.98636 0.87725,2.14178 1.38972,0.21555 2.42742,-0.96041 3.53244,-1.61544 0.78793,-0.46707 1.50573,-1.03133 2.09287,-1.75392 0.65662,-0.8081 0.98034,-1.79693 1.19694,-2.82612 0.27934,-1.32732 -0.15718,-2.69706 -0.81971,-3.82728 -0.24562,-0.41901 -0.61621,-0.40689 -0.11874,0.0181 0.87188,0.74493 1.0658,1.97701 1.00101,3.08111 -0.0565,0.96312 -0.33419,1.87325 -0.63744,2.80553 -0.22883,0.70351 -0.74137,1.54754 -0.35231,2.21007 0.52772,0.89867 1.3379,1.92403 2.4207,1.95368 0.92573,0.0253 1.57794,-0.78704 2.13441,-1.41627 0.23741,-0.26845 0.46104,-0.54944 0.71149,-0.80612" />
            <path d="m 124.94733,129.19285 c 0.47237,0.71056 0.21489,1.54703 -0.01,2.34314 -0.22158,0.78483 -0.47104,1.55157 -0.62789,2.3461 -0.15275,0.77378 -0.5962,1.40322 -0.9217,2.10422 -0.6106,1.31496 -0.74956,2.85056 -1.59861,4.04463 -0.52045,0.73193 -0.3854,3.17318 -0.52382,2.39913 -0.0886,-0.49529 0.11324,-1.55101 0.39165,-2.16852 0.69444,-1.54028 1.08867,-3.21704 2.00575,-4.65881 0.52481,-0.82506 1.50196,-1.4487 2.413,-1.35826 0.95995,0.0953 1.42298,-0.92103 2.18922,-1.27635 0.86472,-0.40098 1.78297,-1.17342 2.71573,-0.93357 0.47578,0.12234 0.84326,0.47671 1.11402,0.86644" />
            <path d="m 148.48579,120.86303 c 0.73453,1.02233 0.45232,2.42884 0.31602,3.6058 -0.14294,1.23434 -0.44433,2.37222 -0.88303,3.58021 -0.58059,1.5987 -1.20101,3.20303 -1.43797,4.887 -0.22239,1.58052 -0.24243,3.19945 -0.45765,4.76674 -0.15616,1.13711 -0.88623,4.53348 0.10044,3.74721 1.06545,-0.84905 1.73865,-2.07926 2.62778,-3.13357 1.01597,-1.20471 2.02623,-2.38107 2.98954,-3.65103 0.92852,-1.22409 1.84808,-2.51782 2.32953,-3.96574 0.38633,-1.16185 0.64676,-2.34258 1.17132,-3.47301 0.24935,-0.53733 0.29792,-2.85523 0.3914,-1.09989 0.14822,2.78318 -1.39726,5.25356 -1.64099,7.99591 -0.19821,2.23023 -0.49906,4.50276 -0.19752,6.72744 0.15944,1.17633 0.96529,1.43493 1.82785,0.33879 0.90894,-1.15507 1.53178,-2.43791 2.48284,-3.61248 1.11574,-1.37796 1.21779,-3.25628 2.23957,-4.65215 0.95591,-1.3059 1.25461,-2.78391 2.15898,-4.1888 0.87388,-1.35754 1.10708,-2.97194 1.68805,-4.46806 0.2616,-0.67367 0.4249,-1.38901 0.41604,-2.11459" />
            <path d="m 173.20655,130.32141 c -1.23448,0.66951 -2.34569,1.57622 -3.12558,2.77271 -0.8749,1.34225 -1.96583,2.52562 -2.83546,3.87139 -0.40874,0.63255 -0.81844,1.23439 -0.9459,1.97879 -0.11461,0.6694 -0.73726,2.43318 0.32147,2.25891 1.52013,-0.25022 3.00502,-0.87241 4.20022,-1.81451 0.56055,-0.44184 1.16199,-0.74404 1.72223,-1.24764 1.19997,-1.07865 2.39905,-2.3602 2.64129,-4.03812 0.17407,-1.20578 0.22055,-2.9226 -0.95719,-3.45909 -0.30456,-0.13874 -1.16464,-0.52775 -1.02108,-0.32244 0.49153,0.70297 1.38556,1.06608 1.60333,2.00694 0.16175,0.69882 1.11054,0.99572 0.44384,1.78396 -0.47762,0.56468 -0.59599,1.28058 -0.60758,1.99484 -0.0367,2.25817 1.87815,4.58401 4.2032,4.63997" />
            <path d="m 184.11593,130.48263 c 0.49864,1.39582 1.03521,2.96781 0.36111,4.42096 -0.61741,1.33094 -2.09082,2.0749 -2.65676,3.40394 -0.32199,0.75616 -0.36528,3.22097 -0.47389,2.4131 -0.0381,-0.28302 0.25522,-1.19776 0.56669,-1.71983 0.56083,-0.94003 1.03626,-2.08268 2.01593,-2.60799 1.00047,-0.53645 2.09202,-0.8535 3.11322,-1.36596 0.96473,-0.48413 1.90221,-1.02191 2.87254,-1.49453 1.02593,-0.49971 1.84648,0.88726 1.68922,1.7168 -0.16548,0.87295 -0.48563,1.6081 -0.50176,2.596 -0.016,0.98202 -0.0947,2.15102 0.69571,2.85164 0.26616,0.23594 0.46178,0.71277 0.86278,0.69521" />
          </g>
        </mask>
      </defs>

      <text
        className="text-fill"
        x="50%"
        // Adjusted y-coordinate to center the larger text vertically
        y="145"
        textAnchor="middle"
        // Increased font size
        fontSize="50"
        // fontWeight="bold"
        fontFamily="Caveat"
        mask={`url(#${uniqueMaskId})`}
      >
        {/* The new text */}
        Leong Kar Wan
      </text>
    </svg>
  )
}

// This is your main page component.
export default function HomePage() {
  // State to manage the key, which forces the component to re-render
  const [animationKey, setAnimationKey] = useState(0)

  // Function to change the key, triggering the replay
  const handleReplay = () => {
    setAnimationKey((prevKey) => prevKey + 1)
  }

  return (
    <>
      <style jsx global>{`
        /* =================================== */
        /* === COLOR CONTROL PANEL === */
        /* =================================== */

        :root {
          /* 1. Change your page background color here */
          --page-background-color: #ffffff; /* White */

          /* 2. Change the final text color here */
          --text-color: #000000; /* Black */

          /* 3. This is the "magic reveal" color. DO NOT CHANGE THIS. It must be white. */
          --reveal-color: white;
        }

        /* =================================== */
        /* === End of Color Controls === */
        /* =================================== */

        body {
          margin: 0;
          background-color: var(--page-background-color);
        }
        .main-container {
          font-family: system-ui, sans-serif;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          min-height: 100vh;
          gap: 2rem;
        }
        .replayButton {
          background-color: #0077cc;
          color: white;
          border: none;
          padding: 12px 25px;
          font-size: 1.1rem;
          border-radius: 8px;
          cursor: pointer;
          transition:
            background-color 0.2s,
            transform 0.1s;
        }
        .replayButton:hover {
          background-color: #005fa3;
        }
        .replayButton:active {
          transform: scale(0.98);
        }

        /* --- Animation CSS --- */
        .svgMaskReveal .text-fill {
          fill: var(--text-color); /* Uses the text color from your control panel */
        }
        .svgMaskReveal path {
          stroke: var(--reveal-color); /* Uses the reveal color (white) */
          stroke-width: 65px;
          fill: none;
          stroke-dasharray: var(--mask-path-length);
          stroke-dashoffset: var(--mask-path-length);
          animation-name: draw-mask-stroke;
          animation-duration: var(--animation-duration, 1s);
          animation-delay: var(--animation-delay, 0s);
          animation-timing-function: ease-in-out;
          animation-fill-mode: forwards;
        }
        @keyframes draw-mask-stroke {
          to {
            stroke-dashoffset: 0;
          }
        }
      `}</style>

      <main className="main-container">
        {/* The key prop forces a complete re-mount when the value changes */}
        <SvgMaskAnimation key={animationKey} />

        <button className="replayButton" onClick={handleReplay}>
          Replay Animation
        </button>
      </main>
    </>
  )
}
