.thought {
  font-size: 1.5rem;
  color: #888; /* A softer, more contemplative gray */
  font-style: italic;
  font-family: 'Georgia', 'serif'; /* A classic serif font to contrast with the code */
  text-shadow: 0 0 5px rgba(136, 136, 136, 0.5);
  opacity: 0.9;
}
.code-line {
  font-size: 1.2rem;
  color: #d0d0d0; /* A crisp, standard terminal white */
  font-family: 'Fira Code', 'Victor Mono', monospace; /* The same font as your comments */
  white-space: nowrap;
}
/* .thought {
  font-size: 1.5rem;
  color: #999;
  margin-bottom: 0.2rem;
  line-height: 1.2; */
/* color: #d0d0d0; */
/* } */
/* .code-line {
  font-size: 1.2rem;
} */
/* .comment-js,
.comment-py,
.comment-c,
.comment-asm,
.comment-sh {
  font-size: 1.2rem;
  color: #5a9e5a;
  font-style: italic;
  margin-bottom: 0.2rem;
  line-height: 1.2;
} */
/* [class*='comment-'] { */
:global([class*='comment-']) {
  font-size: 1.2rem;
  font-style: italic;
  font-family: 'Fira Code', 'Victor Mono', monospace; /* A nice coding font */
  opacity: 0.8;
  white-space: nowrap;
}
/* --- 2. Thematic Color Groups --- */
/* Group A: Web, Scripting & General Purpose (Classic Green) */
.comment-js,
.comment-py,
.comment-php,
.comment-rb,
.comment-lua,
.comment-perl {
  color: #6a9955;
}
/* Group B: Systems & Compiled Languages (Cool Blue/Teal) */
.comment-c,
.comment-cpp,
.comment-csharp,
.comment-rs,
.comment-java,
.comment-fortran,
.comment-wasm {
  color: #569cd6;
}
/* Group C: Mobile, Modern & Specialty (Vibrant Orange/Amber) */
.comment-swift,
.comment-kt,
.comment-kotlin,
.comment-dart,
.comment-gd,
.comment-gdscript,
.comment-sol,
.comment-solidity {
  color: #ce9178;
}
/* Group D: Functional, Academic & Niche (Muted Yellow/Gold) */
.comment-hs,
.comment-lisp,
.comment-scala,
.comment-ex,
.comment-pl,
.comment-julia,
.comment-jl,
.comment-matlab,
.comment-qc {
  color: #d7ba7d;
}
/* Group E: Shell & DevOps (Subtle Gray/Off-white) */
.comment-sh,
.comment-shell,
.comment-powershell,
.comment-ps1,
.comment-bat,
.comment-docker,
.comment-yml {
  color: #999999;
  font-style: normal; /* Shell comments are often not italicized */
}
/* Group F: Low-Level & Esoteric (Sharp Magenta/Purple) */
.comment-asm,
.comment-assembly,
.comment-vim,
.comment-emacs,
.comment-regex {
  color: #c586c0;
}
/* Group G: Simple Markup (Plain) */
.comment-md,
.comment-ipync {
  color: #b0b0b0;
  font-style: normal;
}

.streamItem {
  width: 100%;
  padding: 0rem 2rem;
  display: flex;
  justify-content: center;
  text-align: center;
}

.streamItem {
  width: 100%;
  padding: 0rem 2rem;
  display: flex;
  justify-content: center;
  text-align: center;
}
.linksContainer {
  display: flex;
  justify-content: center;
  gap: 2rem;
  margin-top: 3rem;
  opacity: 0;
  transition: opacity 1s ease-in;
  pointer-events: auto;
}
.linksContainer.visible {
  opacity: 1;
}
.link {
  font-size: 1.2rem;
  color: #999;
  text-decoration: none;
  transition: color 0.3s;
}
.link:hover {
  color: #fff;
}
.link a {
  font-size: 1.2rem;
  color: #999;
  text-decoration: none;
  transition: color 0.3s;
}
.link a:hover {
  color: #fff;
}

.finaleWrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: #000;
  font-family: monospace;
  overflow: hidden;
}

.streamGrid {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
}
/* .streamGrid {
  display: flex;
  justify-content: center;
  gap: 2rem;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  opacity: 0;
  transition: opacity 1s ease-in;
} */
.streamGrid.visible {
  opacity: 1;
}
.slow {
  animation: scrollUp 180s linear infinite;
}
.medium {
  animation: scrollUp 120s linear infinite;
}
.fast {
  animation: scrollUp 90s linear infinite;
}

@keyframes scrollUp {
  from {
    transform: translateY(100vh);
  }
  to {
    transform: translateY(-100%);
  }
}

.codeBlock {
  background: rgba(10, 10, 10, 0.5);
  border: 1px solid #333;
  border-radius: 4px;
  padding: 1rem;
  font-size: 0.8rem;
}

.glitchOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.glitchItem {
  position: absolute;
  width: 30%;
  max-width: 450px;
  opacity: 0;
  animation: fadeInOut 3s 1;
}

@keyframes fadeInOut {
  0% {
    opacity: 0;
    transform: scale(0.95);
  }
  20% {
    opacity: 1;
    transform: scale(1);
  }
  80% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.95);
  }
}
/* .staticContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  text-align: center;
  width: 100%;
  opacity: 1;
  transition: opacity 0.5s ease-out;
}
.staticContainer.hidden {
  opacity: 0;
} */
.staticContainer.hidden {
  transform: translate(-50%, -200vh);
  opacity: 0;
}

.staticContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  text-align: center;
  transition:
    transform 2s ease-in-out,
    opacity 2s ease-in-out;
}
.staticContainer.scrollingUp {
  transform: translate(-50%, -200vh);
} /* Scrolls up and away */
.staticContainer.fadingOut,
.scrollContainer.fadingOut {
  opacity: 0;
}

.scrollContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  opacity: 0;
  transition: opacity 1s ease-in-out;
}
.scrollContainer.visible {
  opacity: 1;
}
.singleLineStream {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center; /* Center the single lines */
  text-align: center;
  pointer-events: none; /* Let clicks pass through */
  z-index: 5; /* Ensure it's on top of the code walls but below the static header */
}
.singleLineStream {
  animation: scrollUp 70s linear infinite;
}
.x-fast {
  animation: scrollUp 70s linear infinite;
  font-size: 1.2rem;
}
.codeWall {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex; /* Use Flexbox to align columns */
  justify-content: center;
  gap: 2rem;
  z-index: 2; /* Ensure it's behind single lines but visible */
}
.columnWrapper {
  display: flex;
  flex-direction: column;
  width: 30%;
  max-width: 450px;
  /* THE KEY: We apply the animation to these wrappers, not the columns themselves */
}
.codeColumn {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}
/* .finalMessage {
  font-size: 2rem;
  color: #00ff00;
  text-shadow:
    0 0 15px #000,
    0 0 20px #000;
  display: flex;
  justify-content: center;
  align-items: center;
} */
.finalMessage {
  color: #00ff00;
  text-shadow: 0 0 10px rgba(0, 255, 0, 0.7);
  font-size: 2rem;
  /* --- NEW CSS ANIMATION --- */
  /* The number of characters in "> Status: still building." */
  /* width: 25ch;  */
  width: 27ch;
  overflow: hidden;
  white-space: nowrap;
  border-right: 3px solid #00ff00; /* This becomes our cursor */
  animation:
    typing 2.5s steps(25, end) forwards,
    blink-caret 1.25s step-end infinite;
  /* blink-caret 0.75s step-end infinite; */
  /* 2.5s total time, 25 steps */
}

.typingContainer {
  animation: fadeIn 0.5s ease-out;
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.finalMessageContainer {
  display: flex;
  justify-content: center;
  align-items: center;
}
.typingAnimation {
  font-size: 2rem;
  color: #00ff00;
  text-shadow: 0 0 10px rgba(0, 255, 0, 0.7);
  width: 26ch;
  overflow: hidden;
  white-space: nowrap;
  border-right: 3px solid #00ff00;
  animation:
    typing 2.5s steps(25, end) forwards,
    blink-caret 2s step-end infinite;
  /* blink-caret 0.75s step-end infinite; */
}
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 26ch;
  }
}
@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: #00ff00;
  }
}

.idlePrompt {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.blinkingCursor {
  display: inline-block;
  width: 10px;
  height: 1.8rem;
  background-color: #00ff00;
  animation: blink 1s step-end infinite;
}
/* .blinkingCursor {
  display: inline-block;
  width: 10px;
  height: 1.8rem;
  background-color: #00ff00;
  margin-left: 8px;
  animation: blink 1s step-end infinite;
} */
/* .blinkingCursor {
  display: inline-block;
  width: 10px;
  height: 1.8rem;
  background-color: #00ff00;
  animation: blink 1s step-end infinite;
  vertical-align: bottom;
  margin-left: 8px;
} */
@keyframes blink {
  50% {
    background-color: transparent;
  }
}

/**/

/* DataStorm.js */
.dataStormOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 50; /* On top of everything */
  pointer-events: none;
}
@keyframes burstIn {
  from {
    transform: scale(0);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes collapse {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    /* It scales down to nothing while moving to its own center */
    transform: scale(0) translate(-50%, -50%);
    opacity: 0;
  }
}
/* We need to adjust the contentWrapper to be invisible initially */
.contentWrapper {
  width: 100%;
  height: 100%;
  opacity: 0; /* Hidden by default */
  transition: opacity 1s ease-in-out 1s; /* Fade in after a 1s delay */
}
.contentWrapper.visible {
  opacity: 1;
}
/* .contentWrapper {
  width: 100%;
  height: 100%;
  opacity: 1;
  transition: opacity 0.5s ease-in-out;
} */
.contentWrapper.transitioning {
  opacity: 0;
}
.stormBlock.collapsing {
  animation: collapse 1s ease-in forwards;
}
/* .stormBlock {
  position: absolute;
  width: 30%;
  max-width: 400px;
  background: rgba(10, 10, 10, 0.8);
  border: 1px solid #333;
  border-radius: 4px;
  padding: 1rem;
  animation: burstIn 0.5s ease-out forwards;
  transform: scale(0);
} */
.stormBlock {
  position: absolute;
  opacity: 0;
  width: 30%;
  max-width: 400px;
  background: rgba(10, 10, 10, 0.8);
  border: 1px solid #333;
  padding: 1rem;
  border: 1px solid var(--particle-color);
  box-shadow: 0 0 15px 0px var(--particle-color);
  animation: burstAndCollapse var(--particle-lifetime, 100ms) ease-out forwards;
}
@keyframes burstAndCollapse {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  20% {
    /* Appears quickly */
    transform: scale(1);
    opacity: inherit;
  }
  80% {
    /* Holds for a moment */
    transform: scale(1);
    opacity: inherit;
  }
  100% {
    /* Collapses quickly */
    transform: scale(0);
    opacity: 0;
  }
}
/* DataStorm.js */
